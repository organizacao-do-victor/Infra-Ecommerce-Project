---
- hosts: all
  vars:
    db_user: postgres
    db_password: pass
    db_host: 192.168.100.140
#    ansible_python_interpreter: /bin/python3

#  pre_tasks:
#  - name: "Install psycopg2"
#    apt:
#      name: python3-psycopg2
#    become: yes

  tasks:
  #requires python3-psycopg2 on local machine
  - name: "Create app database"
    postgresql_db:
      name: produtos	
      login_host: "{{ db_host }}"
      login_user: "{{ db_user }}"
      login_password: "{{ db_password }}"


  - name: "init"
    postgresql_query:
      db: produtos	
      query: "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\""
      login_host: "{{ db_host }}"
      login_user: "{{ db_user }}"
      login_password: "{{ db_password }}"


  - name: "Create app table"
    postgresql_table:
      db: produtos	
      table: "test"
      columns: ["sku UUID PRIMARY KEY", "product_name VARCHAR (255) NOT NULL", "description VARCHAR(255)", "price NUMERIC(10,2) NOT NULL", "quantity INT NOT NULL", "image_link VARCHAR (255) NOT NULL"]
      login_host: "{{ db_host }}"
      login_user: "{{ db_user }}"
      login_password: "{{ db_password }}"
  
  - name: "test"
    postgresql_query:
      db: produtos	
      query: "INSERT INTO test(sku, product_name, description, price, quantity, image_link) VALUES (uuid_generate_v4(), 'cigarro', 'Faz bem', 9.50, 1, 's3://ecommerce-as4d4ewf4wsaxasf5ergsax4er62d/79f8c29dfb6f-448d-9a99-f02ca6e7dd86.webp')"
      login_host: "{{ db_host }}"
      login_user: "{{ db_user }}"
      login_password: "{{ db_password }}"


#  - name: "Create db user"
#    postgresql_user:
#      state: present
#      name: "{{ fdsbi }}"
#      password: "{{ asd }}"
#      login_host: "{{ db_host }}"
#      login_user: "{{ db_user }}"
#      login_password: "{{ db_password }}"
#  
#  - name: "Grant db user access to app db"
#    postgresql_privs:
#      type: database
#      database: "{{ db_name }}"
#      roles: "{{ db_user }}"
#      grant_option: no
#      privs: all
#    become: yes
#  
#  - name: "Allow md5 connection for the db user"
#    postgresql_pg_hba:
#      dest: "~/data/pg_hba.conf"
#      contype: host
#      databases: all
#      method: md5
#      users: "{{ db_user }}"
#      create: true
#    become: yes
#    notify: restart postgres